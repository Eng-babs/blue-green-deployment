events {
    worker_connections 1024;
}

http {
    # This defines our two ice cream trucks (upstreams)
    upstream app_backend {
        # If ACTIVE_POOL is "blue", Blue is primary
        server app_blue:3000 max_fails=1 fail_timeout=5s;
        server app_green:3000 backup;
    }

    # If you switch to green, this would be used instead
    upstream app_backend_green {
        server app_green:3000 max_fails=1 fail_timeout=5s;
        server app_blue:3000 backup;
    }

    server {
        listen 80;

        location / {
            # Route based on which pool is active
            proxy_pass http://app_backend;
            
            # Fast timeouts so we detect problems quickly
            proxy_connect_timeout 2s;
            proxy_send_timeout 3s;
            proxy_read_timeout 3s;
            
            # Retry on errors (switch trucks if one breaks!)
            proxy_next_upstream error timeout http_500 http_502 http_503 http_504;
            proxy_next_upstream_tries 2;
            
            # Forward the special headers from the app
            proxy_pass_request_headers on;
            
            # Make sure response headers reach the client
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
        }

        # Health check endpoint
        location /healthz {
            proxy_pass http://app_backend/healthz;
            proxy_connect_timeout 1s;
            proxy_read_timeout 1s;
        }
    }
}
